# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//build/config/features.gni")
import("//build/ohos.gni")
import("//build/test.gni")
module_output_path = "dmsfwk/continuationmanager"
distributed_service = "//foundation/ability/dmsfwk/services"

config("continuationmanager_fuzz_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${distributed_service}/dtbabilitymgr/include/",
    "//foundation/ability/dmsfwk/interfaces/innerkits/continuation_manager/include/",
  ]
}

dtbabilitymgr_sources = [
  "${distributed_service}/dtbabilitymgr/src/continuation_manager/app_device_callback_stub.cpp",
  "${distributed_service}/dtbabilitymgr/src/continuation_manager/connect_status_info.cpp",
  "${distributed_service}/dtbabilitymgr/src/continuation_manager/continuation_extra_params.cpp",
  "${distributed_service}/dtbabilitymgr/src/continuation_manager/continuation_result.cpp",
  "${distributed_service}/dtbabilitymgr/src/continuation_manager/device_selection_notifier_proxy.cpp",
  "${distributed_service}/dtbabilitymgr/src/continuation_manager/device_selection_notifier_stub.cpp",
  "${distributed_service}/dtbabilitymgr/src/continuation_manager/notifier_death_recipient.cpp",
  "${distributed_service}/dtbabilitymgr/src/continuation_manager/notifier_info.cpp",
  "${distributed_service}/dtbabilitymgr/src/distributed_ability_manager_dumper.cpp",
  "${distributed_service}/dtbabilitymgr/src/distributed_ability_manager_service.cpp",
  "${distributed_service}/dtbabilitymgr/src/distributed_ability_manager_stub.cpp",
]

dtbabilitymgr_external_deps = [
  "access_token:libaccesstoken_sdk",
  "access_token:libnativetoken",
  "access_token:libtoken_setproc",
  "c_utils:utils",
  "device_manager:devicemanagersdk",
  "eventhandler:libeventhandler",
  "hiviewdfx_hilog_native:libhilog",
  "init:libbegetutil",
  "ipc:ipc_core",
  "safwk:system_ability_fwk",
  "samgr:samgr_proxy",
]

##############################fuzztest##########################################
ohos_fuzztest("ContinuationManagerFuzzTest") {
  module_out_path = module_output_path

  fuzz_config_file =
      "//foundation/ability/dmsfwk/test/fuzztest/continuationmanager_fuzzer"

  configs = [
    ":continuationmanager_fuzz_config",
    "${distributed_service}/dtbschedmgr/test/resource:coverage_flags",
  ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  sources = [
    "continuationmanager_fuzzer.cpp",
    "fuzz_util.cpp",
  ]

  sources += dtbabilitymgr_sources

  deps = [ "//foundation/ability/dmsfwk/services/base:dmsbaseinner" ]

  external_deps = dtbabilitymgr_external_deps
}

group("fuzztest") {
  testonly = true
  deps = [ ":ContinuationManagerFuzzTest" ]
}
