# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")
import("//foundation/ability/dmsfwk/dmsfwk.gni")

group("unittest") {
  testonly = true
  deps = [ "test:unittest" ]
}

config("distributed_ability_manager_config") {
  visibility = [ ":*" ]
  visibility += [ "./test/*" ]
  include_dirs = [ "include/" ]
  defines = []
  if (os_account_part) {
    defines += [ "OS_ACCOUNT_PART" ]
  }
}

ohos_shared_library("distributed_ability_manager_svr") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  install_enable = true
  sources = [
    "src/continuation_manager/app_connection_stub.cpp",
    "src/continuation_manager/app_device_callback_stub.cpp",
    "src/continuation_manager/connect_status_info.cpp",
    "src/continuation_manager/continuation_extra_params.cpp",
    "src/continuation_manager/continuation_result.cpp",
    "src/continuation_manager/device_selection_notifier_proxy.cpp",
    "src/continuation_manager/device_selection_notifier_stub.cpp",
    "src/continuation_manager/notifier_death_recipient.cpp",
    "src/continuation_manager/notifier_info.cpp",
    "src/distributed_ability_manager_dumper.cpp",
    "src/distributed_ability_manager_service.cpp",
    "src/distributed_ability_manager_stub.cpp",
  ]

  configs = [
    ":distributed_ability_manager_config",
    "//foundation/ability/dmsfwk/services/dtbschedmgr/test/resource:coverage_flags",
  ]

  ldflags = [ "-rdynamic" ]

  deps = [
    "../../interfaces/innerkits/common:common_sdk",
    "../../interfaces/innerkits/continuation_manager:continuation_manager",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
  if (os_account_part) {
    external_deps += [ "os_account:os_account_innerkits" ]
  }

  part_name = "dmsfwk"
  subsystem_name = "ability"
}
