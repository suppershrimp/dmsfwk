# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")
import("//build/test.gni")
import("//foundation/ability/dmsfwk/dmsfwk.gni")

module_output_path = "dmsfwk/distributed_base_svr_test"

distributed_service = "//foundation/ability/dmsfwk/services"

base_configs = [ "${distributed_service}/base:distributed_sched_config" ]

config("test_config") {
  visibility = [ ":*" ]
  include_dirs = [ "//foundation/ability/dmsfwk/utils/native/include" ]
}

base_external_deps = [
  "c_utils:utils",
  "device_manager:devicemanagersdk",
  "eventhandler:libeventhandler",
  "hiviewdfx_hilog_native:libhilog",
  "init:libbegetutil",
  "ipc:ipc_core",
  "safwk:system_ability_fwk",
  "samgr:samgr_proxy",
]

base_public_deps = [
  "//foundation/ability/dmsfwk/services/base:dmsbaseinner",
  "//third_party/googletest:gmock_main",
  "//third_party/googletest:gtest_main",
  "//third_party/libxml2:libxml2",
]

ohos_unittest("dmsbasetest") {
  module_out_path = module_output_path
  sources = [
    "${distributed_service}/base/src/adapter/dnetwork_adapter.cpp",
    "${distributed_service}/base/src/deviceManager/dms_device_info.cpp",
    "${distributed_service}/base/src/distributed_device_node_listener.cpp",
    "${distributed_service}/base/src/dtbschedmgr_device_info_storage.cpp",
    "unittest/deviceManager/dms_device_info_test.cpp",
    "unittest/dfx/dms_hisysevent_report_test.cpp",
    "unittest/dms_network_adapter_test.cpp",
    "unittest/dtbschedmgr_device_info_storage_test.cpp",
  ]
  configs = [
    ":test_config",
    "//foundation/ability/dmsfwk/services/dtbschedmgr/test/resource:coverage_flags",
  ]
  configs += base_configs
  external_deps = base_external_deps
  public_deps = base_public_deps
  part_name = "dmsfwk"
  subsystem_name = "ability"
}

group("unittest") {
  testonly = true
  deps = [ ":dmsbasetest" ]
}
